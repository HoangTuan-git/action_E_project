# Simple CI/CD - No E2E, Direct Push after Unit Tests
name: Simple CI/CD - Build & Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Node.js with cache
      - name: Setup Node.js with npm cache
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            auth/package-lock.json
            product/package-lock.json

      # 3. Install dependencies (parallel)
      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          npm ci --prefix auth &
          npm ci --prefix product &
          wait
          echo "✅ Dependencies installed"

      # 4. Run unit tests (parallel)
      - name: Run auth unit tests
        run: |
          echo "🧪 Running unit tests..."
          npm test --prefix auth &
          wait

      - name: Run product unit tests
        run: |
          echo "🧪 Running unit tests..."
          npm test --prefix product &
          wait
          echo "✅ All unit tests passed"

      # 5. Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6. Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 7. Generate tags
      - name: Generate tags
        id: meta
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "sha_tag=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "date_tag=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      # 8. Build and Push images (parallel với cache)
      - name: Build and push auth-service
        uses: docker/build-push-action@v5
        with:
          context: ./auth
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:${{ steps.meta.outputs.sha_tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:${{ steps.meta.outputs.date_tag }}
          cache-from: type=gha,scope=auth
          cache-to: type=gha,mode=max,scope=auth

      - name: Build and push product-service
        uses: docker/build-push-action@v5
        with:
          context: ./product
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/product-service:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/product-service:${{ steps.meta.outputs.sha_tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/product-service:${{ steps.meta.outputs.date_tag }}
          cache-from: type=gha,scope=product
          cache-to: type=gha,mode=max,scope=product

      - name: Build and push order-service
        uses: docker/build-push-action@v5
        with:
          context: ./order
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/order-service:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/order-service:${{ steps.meta.outputs.sha_tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/order-service:${{ steps.meta.outputs.date_tag }}
          cache-from: type=gha,scope=order
          cache-to: type=gha,mode=max,scope=order

      - name: Build and push api-gateway
        uses: docker/build-push-action@v5
        with:
          context: ./api-gateway
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:${{ steps.meta.outputs.sha_tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:${{ steps.meta.outputs.date_tag }}
          cache-from: type=gha,scope=gateway
          cache-to: type=gha,mode=max,scope=gateway

      # 9. Summary
      - name: Create deployment summary
        run: |
          echo "## 🚀 Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Published Images" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ secrets.DOCKERHUB_USERNAME }}/auth-service:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ secrets.DOCKERHUB_USERNAME }}/product-service:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ secrets.DOCKERHUB_USERNAME }}/order-service:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🏷️ Tags" >> $GITHUB_STEP_SUMMARY
          echo "- \`latest\`, \`${{ steps.meta.outputs.sha_tag }}\`, \`${{ steps.meta.outputs.date_tag }}\`" >> $GITHUB_STEP_SUMMARY
