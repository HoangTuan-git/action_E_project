# Docker Bake Workflow - Advanced multi-stage build
name: Docker Bake Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Stage 1: Test
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [auth, product]
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.service }}/package-lock.json
      
      - run: npm ci --prefix ${{ matrix.service }}
      - run: npm test --prefix ${{ matrix.service }}
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: test

  # Stage 2: Build all services with Docker Bake
  bake:
    name: Docker Bake Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate tags
        id: meta
        run: |
          echo "sha_tag=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          echo "date_tag=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      # Build all targets with Bake
      - name: Build and push with Bake
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
        env:
          REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}
          TAG: ${{ steps.meta.outputs.sha_tag }}

  # Stage 3: Smoke test
  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    needs: bake
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull and test images
        run: |
          SHA_TAG=$(echo ${{ github.sha }} | cut -c1-7)
          
          # Pull images
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:$SHA_TAG
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:$SHA_TAG
          
          echo "✅ Images pulled successfully"
          
          # Basic smoke test
          docker run --rm ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:$SHA_TAG node --version
          echo "✅ Auth service container works"
